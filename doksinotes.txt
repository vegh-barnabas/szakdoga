- témabejelentő megismétlése
- bevezető, motiváció (max 2 oldal)
    - picit részletesebben fejtsd ki a témabejelentetőt, az alkalmazás lényegét
    - írd le motivációdat. mi vett rá, hogy ezt válaszd:
        - szereted a webfejlesztést, 
        - megold egy problémát -> milyen problémát old meg -> miért épp ezt a problémát oldja meg -> miért fontos ez
		
- felhasználói doksi (kb 30 oldal is lehet)
    - itt azt nézed, hogy az alkalmazást FELHASZNÁLÓI SZINTEN HASZNÁLÓKNAK mi kell
        - ezen a ponton nem egy rendszerüzemeltetőnek vagy fejlesztőnek írod a doksit, hanem valaki olyannak, aki lehet, hogy teljesen laikus, és csak a felületet "kattintgatja" -> neki mit kell tudnia, hétköznapi, érthető nyelven
        - az admin is általában csak egy felhasználó, ahogy a recepciós is, csak az appon belól több jogkörrel
    - rendszerkövetelmények
        - mivel ez egy webes app, kb csak egy browser kell hozzá, hogy megnyisd
            - a webszerverre telepítés majd a fejlesztői doksi tárgya
        - korszerű, HTML5-öt, modern js-t (ES6+) támogató browser
            - lehet arra hivatkozni, hogy csak a frissebb böngészőket támogatja az app
            - leírhatod megjegyzésként, hogy a felhasználó érdeke is hogy friss browsert használjon, pl ezért: https://pcworld.hu/pcwlite/sulyos-sebezhetoseget-rejt-a-google-chrome-erdemes-azonnal-frissiteni-309036.html -> itt nyersz pl 1 hivatkozást
    - szerepkörök ismertetése
        - vendég
            - leírás: tőmondatban, mi a szerepkör lényege
            - jogkörök: lista, esetleg egy kis magyarázattal, pl:
                - bejelentkezés: ha akarsz írsz róla valamit, ha nem szorul magyarázatra (trivi a neve alapján), akk hagyod
        - recepciós
            -||-
        - vendég
            -||-
    - konkrét használati esetek:
        - szerepkörönként screenshotokkal, lehetséges hibákkal és azok kezelésével stb
	- tipikus használat: vki edz, vki beléptet, stb...
	
- fejlesztői doksi (kb 15-30 oldal)
    - tipikusan annak írod, aki az appot tovább akarja fejleszteni / telepíteni akarja, stb - tehát rendszerüzemeltető/fejlesztő
	- rétegenként bemutatás: adatbázis táblastruktúra diagrammal, szerver végpontok vezérlők model stb, user interface mockupok bootstrap view réteg bemutatása
    - use case diagram
        - igazából egy kép, ki milyen funkciókhoz férhet hozzá, kb vizuálisan, amit az előbb fent leírtál listákban a jogköröknél kis pálcika emberkékkel
    - telepítés
        - ha letölti valaki gitről pl, hogyan telepítse, mit állítson be, mire figyeljen, milyen programok/eszközök kellenek ehhez, stb
    - üzemeltetéshez kapcsolódó tudnivalók:
        - log fájlok, stb
    - fejlesztői környezet beállítása
        - hasonló a telepítéshez, csak ez nem a production beállítását mutatja be, hanem a dev környezetét
            - ajnálott editor a vscode
            - extension recommendations: https://github.com/szerveroldali/graphql_websocket_kezdocsomag/blob/main/.vscode/extensions.json
                - add hozzá a laravel extension pack-et, és első indításkor felkínálja
            - php, composer telepítése: https://github.com/totadavid95/PhpComposerInstaller
            - nodejs...
    - fejlesztéshez szükséges tudnivalók
        - lexikális konvenciók, stb... pl aláhúzás (snake_case), vagy (camelCase) - hol mit használsz stb.
            -> erre vannak linterek, ha van rá időd, ezek beállításáról is lehet rizsázni
- tesztek (kb. 5-10 oldal)
    - egy kis bevezető, hogy több irányból is tesztelted az appot
    - egyik irány (szoftver szinten automatizált tesztek): 
        - unit testek (test mappa) -> egységtesztek -> ezek az elemi tesztek, osztálymetódusok etc
        - integrációs tesztek: ez már egy picit nagyobb csoportot tesztel, pl csinálsz egy edzőtermet és ahhoz adsz ticket-eket
    - másik irány:
        - manuális tesztek, hogy végigkattintgattad, és milyen szempontok alapján, miért, mi történt, mit vártál el stb -> ez amolyan igényességet sugall és +rizsa lehetőség
- további fejelsztési lehetőségek (fél oldal - 2 oldal)
    - bár már ez az app is jó, DE még van fejlesztési potenciál, pl.
        - ...
        - ...
- befejezés (max 1-2 oldal)
    - összegzed, hogy elégedett vagy az appal, és figyelembe véve a megvalósult funkciókat és a teszteket, szerinted elérted a témabejelentőben megfogalmazott célkitűzést
- köszönetnyilvánítás (max fél oldal)
- irodalomjegyzék, források megjelölése, linkeknél a látogatás dátuma a szakdoga beadásának ideje legyen


- usecase, architektúra, adatbázis, model diagram, ha van rá idő mockup

kérdések:
- canvasre feltöltés - mihez mit
- adatbázis diagramba belerakjam a verified_at-et, olyan táblákat, amiket a laravel hoz létre automatikusan?
- fel kell tüntetnem hogy milyen programokkal csináltam az ábrákat?
- drótvázterv nem lett meg, mekkora baj? van helyette statikus terv, képenként vagy git repora hivatkozzak
- elég annyi manuális teszthez hogy a más jogosultságú nem éri el a többi oldalt vagy írjam le mindet? (gondolom elég)
- így jó a productionbe átrakás? https://stackoverflow.com/questions/59663762/laravel-what-steps-should-one-take-to-make-a-laravel-app-ready-for-production